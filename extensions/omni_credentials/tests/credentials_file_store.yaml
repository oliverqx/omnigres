$schema: "https://raw.githubusercontent.com/omnigres/omnigres/master/pg_yregress/schema.json"
instance:
  init:
  - create extension omni_vfs cascade
  - create extension omni_credentials cascade

tests:

- name: with local_fs
  steps:
  - name: create schema creds
    query: |
      create schema creds

  # FIXME: we use PATH because we can't set env variables yet
  - name: instantiate omni_credentials for creds schema
    query: |
      select omni_credentials.instantiate('creds', env_var => 'PATH')

  - name: create schema creds1
    query: |
      create schema creds1

  # FIXME: we use PATH because we can't set env variables yet
  - name: instantiate omni_credentials for creds1 schema
    query: |
      select omni_credentials.instantiate('creds1', env_var => 'PATH')

  - name: create creds.json file
    query: |
      select omni_vfs.write(omni_vfs.local_fs('../../../../extensions/omni_vfs/tests'), '/creds.json', decode('W3t9XQ==', 'base64'), create_file => true)
      
  - name: exports credentials to a file store upon instantiation
    commit: true
    steps:
    - insert into creds.credentials (name, value) values ('a', 'b')
    - select omni_credentials.instantiate_file_store(
        omni_vfs.local_fs('../../../../extensions/omni_vfs/tests'),
        'creds.json',
        'creds'
      )
    # Not one to one translation with pg_stat_file as it will not error out if file is not present.
    - select omni_vfs.file_info(
        omni_vfs.local_fs('../../../../extensions/omni_vfs/tests'),
        'creds.json'
      )
    - query: select octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.local_fs('../../../../extensions/omni_vfs/tests'),
            'creds.json'
          ),
          'utf8'
        ))
      results:
      - octet_length: 191

  - name: does not update credentials in a file store during transaction
    commit: true
    steps:
    - insert into creds.credentials (name, value) values ('b', 'c')
    - query: select octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.local_fs('../../../../extensions/omni_vfs/tests'),
            'creds.json'
          ),
          'utf8'
        ))
      results:
      - octet_length: 191

  - name: but it does update credentials in a file store after the transaction
    query: >
      select
        octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.local_fs('../../../../extensions/omni_vfs/tests'),
            'creds.json'
          ),
          'utf8'
        ))
    results:
      - octet_length: 382

  - name: imports credentials from a file store
    commit: true
    steps:
    - select omni_credentials.instantiate_file_store(
        omni_vfs.local_fs('../../../../extensions/omni_vfs/tests'),
        'creds.json',
        'creds1'
      )
    - query: select * from creds1.credentials
      results:
      - name: a
        value: b
        kind: credential
        principal: yregress
        scope: {"all": true}
      - name: b
        value: c
        kind: credential
        principal: yregress
        scope: {"all": true}

  - name: updating credentials file
    commit: true
    query: insert into creds1.credentials (name, value) values ('c', 'd')

  - name: it does not propagate back right away
    query: select * from creds.credentials where name = 'c'
    results: [ ]

  - name: but it does if explicitly reloaded
    steps:
    - select creds.credential_file_store_reload(filename) from creds.credential_file_stores
    - query: select name, value from creds.credentials where name = 'c'
      results:
      - name: c
        value: d

- name: with table_fs
  steps:
  - name: create schema credsTable
    query: |
      create schema credsTable

  # FIXME: we use PATH because we can't set env variables yet
  - name: instantiate omni_credentials for creds schema
    query: |
      select omni_credentials.instantiate('credsTable', env_var => 'PATH')

  - name: create schema creds1
    query: |
      create schema creds1Table

  # FIXME: we use PATH because we can't set env variables yet
  - name: instantiate omni_credentials for creds1Table schema
    query: |
      select omni_credentials.instantiate('creds1Table', env_var => 'PATH')

  - name: create creds.json file
    query: |
      select omni_vfs.write(omni_vfs.table_fs('test'), '/credsTable.json', decode('W3t9XQ==', 'base64'), create_file => true)
      
  - name: exports credentials to a file store upon instantiation
    commit: true
    steps:
    - insert into credsTable.credentials (name, value) values ('a', 'b')
    - select omni_credentials.instantiate_file_store(
        omni_vfs.table_fs('test'),
        'credsTable.json',
        'credsTable'
      )
    # Not one to one translation with pg_stat_file as it will not error out if file is not present.
    - select omni_vfs.file_info(
        omni_vfs.table_fs('test'),
        'credsTable.json'
      )
    - query: select octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.table_fs('test'),
            'credsTable.json'
          ),
          'utf8'
        ))
      results:
      - octet_length: 191

  - name: does not update credentials in a file store during transaction
    commit: true
    steps:
    - insert into credsTable.credentials (name, value) values ('b', 'c')
    - query: select octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.table_fs('test'),
            'credsTable.json'
          ),
          'utf8'
        ))
      results:
      - octet_length: 191

  - name: but it does update credentials in a file store after the transaction
    query: >
      select
        octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.table_fs('test'),
            'credsTable.json'
          ),
          'utf8'
        ))
    results:
      - octet_length: 382

  - name: imports credentials from a file store
    commit: true
    steps:
    - select omni_credentials.instantiate_file_store(
        omni_vfs.table_fs('test'),
        'credsTable.json',
        'creds1Table'
      )
    - query: select * from creds1Table.credentials
      results:
      - name: a
        value: b
        kind: credential
        principal: yregress
        scope: {"all": true}
      - name: b
        value: c
        kind: credential
        principal: yregress
        scope: {"all": true}

  - name: updating credentials file
    commit: true
    query: insert into creds1Table.credentials (name, value) values ('c', 'd')

  - name: it does not propagate back right away
    query: select * from credsTable.credentials where name = 'c'
    results: [ ]

  - name: but it does if explicitly reloaded
    steps:
    - select credsTable.credential_file_store_reload(filename) from credsTable.credential_file_stores
    - query: select name, value from credsTable.credentials where name = 'c'
      results:
      - name: c
        value: d

- name: with remote_fs
  steps:
  - name: create schema credsRemote
    query: |
      create schema credsRemote

  # FIXME: we use PATH because we can't set env variables yet
  - name: instantiate omni_credentials for credsRemote schema
    query: |
      select omni_credentials.instantiate('credsRemote', env_var => 'PATH')

  - name: create schema creds1Remote
    query: |
      create schema creds1Remote

  # FIXME: we use PATH because we can't set env variables yet
  - name: instantiate omni_credentials for creds1Remote schema
    query: |
      select omni_credentials.instantiate('creds1Remote', env_var => 'PATH')

  - name: create credsRemote.json file
    query: |
      select omni_vfs.write(
        omni_vfs.remote_fs(
          'dbname=yregress user=yregress host=127.0.0.1 port = ' || current_setting('port'),
          $$omni_vfs.local_fs('../../../../extensions/omni_vfs/tests')$$
        ), 
        '/credsRemote.json', 
        decode('W3t9XQ==', 'base64'), 
        create_file => true
      )
      
  - name: exports credentials to a file store upon instantiation
    commit: true
    steps:
    - insert into credsRemote.credentials (name, value) values ('a', 'b')
    - |
      select omni_credentials.instantiate_file_store(
        omni_vfs.remote_fs(
          'dbname=yregress user=yregress host=127.0.0.1 port = ' || current_setting('port'),
          $$omni_vfs.local_fs('../../../../extensions/omni_vfs/tests')$$
        ), 
        'credsRemote.json',
        'credsRemote'
      )
    # Not one to one translation with pg_stat_file as it will not error out if file is not present.
    - |
      select omni_vfs.file_info(
        omni_vfs.remote_fs(
          'dbname=yregress user=yregress host=127.0.0.1 port = ' || current_setting('port'),
          $$omni_vfs.local_fs('../../../../extensions/omni_vfs/tests')$$
        ), 
        'credsRemote.json'
      )
    - query: |
        select octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.remote_fs(
              'dbname=yregress user=yregress host=127.0.0.1 port = ' || current_setting('port'),
              $$omni_vfs.local_fs('../../../../extensions/omni_vfs/tests')$$
            ), 
            'credsRemote.json'
          ),
          'utf8'
        ))
      results:
      - octet_length: 191

  - name: does not update credentials in a file store during transaction
    commit: true
    steps:
    - insert into credsRemote.credentials (name, value) values ('b', 'c')
    - query: |
        select octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.remote_fs(
              'dbname=yregress user=yregress host=127.0.0.1 port = ' || current_setting('port'),
              $$omni_vfs.local_fs('../../../../extensions/omni_vfs/tests')$$
            ), 
            'credsRemote.json'
          ),
          'utf8'
        ))
      results:
      - octet_length: 191

  - name: but it does update credentials in a file store after the transaction
    query: >
      select
        octet_length(convert_from(
          omni_vfs.read(
            omni_vfs.remote_fs(
              'dbname=yregress user=yregress host=127.0.0.1 port = ' || current_setting('port'),
              $$omni_vfs.local_fs('../../../../extensions/omni_vfs/tests')$$
            ), 
            'credsRemote.json'
          ),
          'utf8'
        ))
    results:
      - octet_length: 382

  - name: imports credentials from a file store
    commit: true
    steps:
    - |
      select omni_credentials.instantiate_file_store(
        omni_vfs.remote_fs(
          'dbname=yregress user=yregress host=127.0.0.1 port = ' || current_setting('port'),
          $$omni_vfs.local_fs('../../../../extensions/omni_vfs/tests')$$
        ), 
        'credsRemote.json',
        'creds1Remote'
      )
    - query: select * from creds1Remote.credentials
      results:
      - name: a
        value: b
        kind: credential
        principal: yregress
        scope: {"all": true}
      - name: b
        value: c
        kind: credential
        principal: yregress
        scope: {"all": true}

  - name: updating credentials file
    commit: true
    query: insert into creds1Remote.credentials (name, value) values ('c', 'd')

  - name: it does not propagate back right away
    query: select * from credsRemote.credentials where name = 'c'
    results: [ ]

  - name: but it does if explicitly reloaded
    steps:
    - select credsRemote.credential_file_store_reload(filename) from credsRemote.credential_file_stores
    - query: select name, value from credsRemote.credentials where name = 'c'
      results:
      - name: c
        value: d
